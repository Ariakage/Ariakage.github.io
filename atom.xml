<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ariakage&#39;s Blog</title>
  
  
  <link href="https://ariakage.github.io/atom.xml" rel="self"/>
  
  <link href="https://ariakage.github.io/"/>
  <updated>2025-10-26T05:37:58.585Z</updated>
  <id>https://ariakage.github.io/</id>
  
  <author>
    <name>Ariakage</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>版本号的定义</title>
    <link href="https://ariakage.github.io/2025/10/26/SemVer/"/>
    <id>https://ariakage.github.io/2025/10/26/SemVer/</id>
    <published>2025-10-26T05:26:13.000Z</published>
    <updated>2025-10-26T05:37:58.585Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-版本号的基本结构"><a href="#1-版本号的基本结构" class="headerlink" title="1.版本号的基本结构"></a>1.版本号的基本结构</h2><p>最常见的形式是 <strong>语义化版本号(Semantic Versioning, SemVer)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Major.Minor.Patch</span><br><span class="line">主版本号.次版本号.修订号</span><br></pre></td></tr></table></figure><p>e.g. <code>1.2.3</code></p><ul><li><strong>主版本号(Major)</strong><ul><li>当你做了<strong>不兼容的 API 或重大功能变更</strong>时增加</li><li>例如从 1.x.x 升级到 2.x.x</li></ul></li><li><strong>次版本号(Minor)</strong><ul><li>当你做了<strong>向下兼容的新功能</strong>时增加</li><li>例如从 1.2.3 升级到 1.3.0</li></ul></li><li><strong>修订号(Patch)</strong><ul><li>当你做了<strong>向下兼容的问题修复</strong>时增加</li><li>例如从 1.2.3 升级到 1.2.4</li></ul></li></ul><h2 id="2-可选扩展部分"><a href="#2-可选扩展部分" class="headerlink" title="2.可选扩展部分"></a>2.可选扩展部分</h2><ul><li><strong>先行版本号(Pre-release)</strong><ul><li>用于 alpha、beta、RC 等测试版本</li><li>如1.2.3-alpha.1 | 2.0.0-beta.2</li></ul></li><li><strong>构建元数据(Build metadata)</strong><ul><li>用于标记构建编号或 CI&#x2F;CD 信息</li><li>如1.2.3+20251026.1<br>完整版语义化版本号<code>MAJOR.MINOR.PATCH-PRERELEASE+BUILD</code></li></ul></li></ul><p>个人例子：<br>本人Github上发布的项目<a href="https://github.com/Ariakage/Hashit">Hashit</a>的一个Release可以这么写版本号<br>1.0.0-stable+62198d63<br>其中<code>62198d63</code>是CRC-32</p>]]></content>
    
    
    <summary type="html">介绍版本号的定义</summary>
    
    
    
    <category term="编程" scheme="https://ariakage.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="版本号" scheme="https://ariakage.github.io/tags/%E7%89%88%E6%9C%AC%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>ATRI ~My Dear Moment~中值得写入作文的句子</title>
    <link href="https://ariakage.github.io/2025/10/26/TheGoodSentenceInATRIMyDearMoment/"/>
    <id>https://ariakage.github.io/2025/10/26/TheGoodSentenceInATRIMyDearMoment/</id>
    <published>2025-10-26T04:15:01.000Z</published>
    <updated>2025-10-26T04:50:38.512Z</updated>
    
    <content type="html"><![CDATA[<article class="message is-info">                <div class="message-body">            <p>本文章中的句子出自ATRI ~My Dear Moment~ 版权归出版方所有</p>        </div>    </article><h3 id="1-光芒，会给与人类希望。有了希望，人们就能继续前行。无论那束光芒多么遥远，多么渺小，人们都会迈向未来，相信自己终有一日能够抵达。-——-夏生"><a href="#1-光芒，会给与人类希望。有了希望，人们就能继续前行。无论那束光芒多么遥远，多么渺小，人们都会迈向未来，相信自己终有一日能够抵达。-——-夏生" class="headerlink" title="1. 光芒，会给与人类希望。有了希望，人们就能继续前行。无论那束光芒多么遥远，多么渺小，人们都会迈向未来，相信自己终有一日能够抵达。 —— 夏生"></a>1. <code>光芒，会给与人类希望。有了希望，人们就能继续前行。无论那束光芒多么遥远，多么渺小，人们都会迈向未来，相信自己终有一日能够抵达。 —— 夏生</code></h3><h5 id="·-类型：抒情散文-励志作文-科幻小说中的哲理描写"><a href="#·-类型：抒情散文-励志作文-科幻小说中的哲理描写" class="headerlink" title="· 类型：抒情散文 &#x2F; 励志作文 &#x2F; 科幻小说中的哲理描写"></a>· 类型：抒情散文 &#x2F; 励志作文 &#x2F; 科幻小说中的哲理描写</h5><h5 id="·-场景：描写人类追寻希望的精神、克服困难的场景，适合开篇或高潮时点明主题。"><a href="#·-场景：描写人类追寻希望的精神、克服困难的场景，适合开篇或高潮时点明主题。" class="headerlink" title="· 场景：描写人类追寻希望的精神、克服困难的场景，适合开篇或高潮时点明主题。"></a>· 场景：描写人类追寻希望的精神、克服困难的场景，适合开篇或高潮时点明主题。</h5><h3 id="2-人类要想活下去，是需要光的-——-ATRI"><a href="#2-人类要想活下去，是需要光的-——-ATRI" class="headerlink" title="2. 人类要想活下去，是需要光的 —— ATRI"></a>2. <code>人类要想活下去，是需要光的 —— ATRI</code></h3><h5 id="·-类型：科幻哲学-议论文"><a href="#·-类型：科幻哲学-议论文" class="headerlink" title="· 类型：科幻哲学 &#x2F; 议论文"></a>· 类型：科幻哲学 &#x2F; 议论文</h5><h5 id="·-场景：讨论人类生存与文明延续的命题场景，可用于文章开头的引言或科幻世界观设定。"><a href="#·-场景：讨论人类生存与文明延续的命题场景，可用于文章开头的引言或科幻世界观设定。" class="headerlink" title="· 场景：讨论人类生存与文明延续的命题场景，可用于文章开头的引言或科幻世界观设定。"></a>· 场景：讨论人类生存与文明延续的命题场景，可用于文章开头的引言或科幻世界观设定。</h5><h3 id="3-如果固执己见就能让现状算作幸福，那么据推测，幸福与不幸都是毫无价值的概念-——-ATRI"><a href="#3-如果固执己见就能让现状算作幸福，那么据推测，幸福与不幸都是毫无价值的概念-——-ATRI" class="headerlink" title="3. 如果固执己见就能让现状算作幸福，那么据推测，幸福与不幸都是毫无价值的概念 —— ATRI"></a>3. <code>如果固执己见就能让现状算作幸福，那么据推测，幸福与不幸都是毫无价值的概念 —— ATRI</code></h3><h5 id="类型：哲理议论文-抒情散文"><a href="#类型：哲理议论文-抒情散文" class="headerlink" title="类型：哲理议论文 &#x2F; 抒情散文"></a>类型：哲理议论文 &#x2F; 抒情散文</h5><h5 id="场景：适合写思想深度的段落，用来探讨幸福与价值、人的选择与坚持。"><a href="#场景：适合写思想深度的段落，用来探讨幸福与价值、人的选择与坚持。" class="headerlink" title="场景：适合写思想深度的段落，用来探讨幸福与价值、人的选择与坚持。"></a>场景：适合写思想深度的段落，用来探讨幸福与价值、人的选择与坚持。</h5><h3 id="4-接受灭亡，坐以待毙就是解脱吗？乐园和墓地是同义词吗？如果还有时间，就应该挣扎到最后。如果因为终有一死就放弃挣扎，那人类的一生也没有意义，立刻死去反而代价会更小。-——-ATRI"><a href="#4-接受灭亡，坐以待毙就是解脱吗？乐园和墓地是同义词吗？如果还有时间，就应该挣扎到最后。如果因为终有一死就放弃挣扎，那人类的一生也没有意义，立刻死去反而代价会更小。-——-ATRI" class="headerlink" title="4. 接受灭亡，坐以待毙就是解脱吗？乐园和墓地是同义词吗？如果还有时间，就应该挣扎到最后。如果因为终有一死就放弃挣扎，那人类的一生也没有意义，立刻死去反而代价会更小。 —— ATRI"></a>4. <code>接受灭亡，坐以待毙就是解脱吗？乐园和墓地是同义词吗？如果还有时间，就应该挣扎到最后。如果因为终有一死就放弃挣扎，那人类的一生也没有意义，立刻死去反而代价会更小。 —— ATRI</code></h3><h5 id="·-类型：哲理议论文-科幻小说人物独白"><a href="#·-类型：哲理议论文-科幻小说人物独白" class="headerlink" title="· 类型：哲理议论文 &#x2F; 科幻小说人物独白"></a>· 类型：哲理议论文 &#x2F; 科幻小说人物独白</h5><h5 id="·-场景：适合描写面对危机、末日或绝望境地时的思考，用作冲突高潮或人物心理刻画。"><a href="#·-场景：适合描写面对危机、末日或绝望境地时的思考，用作冲突高潮或人物心理刻画。" class="headerlink" title="· 场景：适合描写面对危机、末日或绝望境地时的思考，用作冲突高潮或人物心理刻画。"></a>· 场景：适合描写面对危机、末日或绝望境地时的思考，用作冲突高潮或人物心理刻画。</h5><h3 id="5-人类的繁荣也都会失去意义，毕竟地球自有命数，宇宙也终将迎来热寂-——-夏生"><a href="#5-人类的繁荣也都会失去意义，毕竟地球自有命数，宇宙也终将迎来热寂-——-夏生" class="headerlink" title="5. 人类的繁荣也都会失去意义，毕竟地球自有命数，宇宙也终将迎来热寂 —— 夏生"></a>5. <code>人类的繁荣也都会失去意义，毕竟地球自有命数，宇宙也终将迎来热寂 —— 夏生</code></h3><h5 id="·-类型：科幻哲学-宇宙观描写"><a href="#·-类型：科幻哲学-宇宙观描写" class="headerlink" title="· 类型：科幻哲学 &#x2F; 宇宙观描写"></a>· 类型：科幻哲学 &#x2F; 宇宙观描写</h5><h5 id="·-场景：文章中的宏观哲理描写，适合铺陈末日感或宇宙背景，增强史诗感。"><a href="#·-场景：文章中的宏观哲理描写，适合铺陈末日感或宇宙背景，增强史诗感。" class="headerlink" title="· 场景：文章中的宏观哲理描写，适合铺陈末日感或宇宙背景，增强史诗感。"></a>· 场景：文章中的宏观哲理描写，适合铺陈末日感或宇宙背景，增强史诗感。</h5><h3 id="6-请不要舍弃自己的未来-——-ATRI"><a href="#6-请不要舍弃自己的未来-——-ATRI" class="headerlink" title="6. 请不要舍弃自己的未来 —— ATRI"></a>6. <code>请不要舍弃自己的未来 —— ATRI</code></h3><h5 id="·-类型：励志-抒情-励志作文"><a href="#·-类型：励志-抒情-励志作文" class="headerlink" title="· 类型：励志 &#x2F; 抒情 &#x2F; 励志作文"></a>· 类型：励志 &#x2F; 抒情 &#x2F; 励志作文</h5><h5 id="·-场景：直接点明主题，适合作为呼吁、结尾或高潮段的鼓舞语句。"><a href="#·-场景：直接点明主题，适合作为呼吁、结尾或高潮段的鼓舞语句。" class="headerlink" title="· 场景：直接点明主题，适合作为呼吁、结尾或高潮段的鼓舞语句。"></a>· 场景：直接点明主题，适合作为呼吁、结尾或高潮段的鼓舞语句。</h5><h3 id="7-没有好奇心的人是做不出学问的，要是有能想象出“说不定”，用这仅存的可能性来拓开范围的心境，那被看做是错误的行为不如说会变成线索也说不定-——-夏生父亲"><a href="#7-没有好奇心的人是做不出学问的，要是有能想象出“说不定”，用这仅存的可能性来拓开范围的心境，那被看做是错误的行为不如说会变成线索也说不定-——-夏生父亲" class="headerlink" title="7. 没有好奇心的人是做不出学问的，要是有能想象出“说不定”，用这仅存的可能性来拓开范围的心境，那被看做是错误的行为不如说会变成线索也说不定 —— 夏生父亲"></a>7. <code>没有好奇心的人是做不出学问的，要是有能想象出“说不定”，用这仅存的可能性来拓开范围的心境，那被看做是错误的行为不如说会变成线索也说不定 —— 夏生父亲</code></h3><h5 id="·-类型：议论文-励志散文"><a href="#·-类型：议论文-励志散文" class="headerlink" title="· 类型：议论文 &#x2F; 励志散文"></a>· 类型：议论文 &#x2F; 励志散文</h5><h5 id="·-场景：强调探索精神与科学态度，适合写学习、科研、创新主题作文或哲理科幻背景。"><a href="#·-场景：强调探索精神与科学态度，适合写学习、科研、创新主题作文或哲理科幻背景。" class="headerlink" title="· 场景：强调探索精神与科学态度，适合写学习、科研、创新主题作文或哲理科幻背景。"></a>· 场景：强调探索精神与科学态度，适合写学习、科研、创新主题作文或哲理科幻背景。</h5><h3 id="8-不知喜悦，何来悲伤？-——-夏生"><a href="#8-不知喜悦，何来悲伤？-——-夏生" class="headerlink" title="8. 不知喜悦，何来悲伤？ —— 夏生"></a>8. <code>不知喜悦，何来悲伤？ —— 夏生</code></h3><h5 id="·-类型：抒情散文-文学哲思"><a href="#·-类型：抒情散文-文学哲思" class="headerlink" title="· 类型：抒情散文 &#x2F; 文学哲思"></a>· 类型：抒情散文 &#x2F; 文学哲思</h5><h5 id="·-场景：适合作为反思、哲理描写或人物心理独白的句子，突出情感对比。"><a href="#·-场景：适合作为反思、哲理描写或人物心理独白的句子，突出情感对比。" class="headerlink" title="· 场景：适合作为反思、哲理描写或人物心理独白的句子，突出情感对比。"></a>· 场景：适合作为反思、哲理描写或人物心理独白的句子，突出情感对比。</h5><h3 id="9-只要有光，无论目标多么遥远，人们都能继续前行-——-夏生"><a href="#9-只要有光，无论目标多么遥远，人们都能继续前行-——-夏生" class="headerlink" title="9. 只要有光，无论目标多么遥远，人们都能继续前行 —— 夏生"></a>9. <code>只要有光，无论目标多么遥远，人们都能继续前行 —— 夏生</code></h3><h5 id="·-类型：励志-抒情-科幻哲理"><a href="#·-类型：励志-抒情-科幻哲理" class="headerlink" title="· 类型：励志 &#x2F; 抒情 &#x2F; 科幻哲理"></a>· 类型：励志 &#x2F; 抒情 &#x2F; 科幻哲理</h5><h5 id="·-场景：强调希望与目标，适合文章核心主题、开篇引题或高潮段落。"><a href="#·-场景：强调希望与目标，适合文章核心主题、开篇引题或高潮段落。" class="headerlink" title="· 场景：强调希望与目标，适合文章核心主题、开篇引题或高潮段落。"></a>· 场景：强调希望与目标，适合文章核心主题、开篇引题或高潮段落。</h5><h3 id="10-人类的自救之路永远不会断绝-——-夏生"><a href="#10-人类的自救之路永远不会断绝-——-夏生" class="headerlink" title="10. 人类的自救之路永远不会断绝 —— 夏生"></a>10. <code>人类的自救之路永远不会断绝 —— 夏生</code></h3><h5 id="·-类型：科幻哲学-励志"><a href="#·-类型：科幻哲学-励志" class="headerlink" title="· 类型：科幻哲学 &#x2F; 励志"></a>· 类型：科幻哲学 &#x2F; 励志</h5><h5 id="·-场景：描写人类坚韧不拔的精神，适合结尾总结、鼓舞读者。"><a href="#·-场景：描写人类坚韧不拔的精神，适合结尾总结、鼓舞读者。" class="headerlink" title="· 场景：描写人类坚韧不拔的精神，适合结尾总结、鼓舞读者。"></a>· 场景：描写人类坚韧不拔的精神，适合结尾总结、鼓舞读者。</h5><h3 id="11-我们不知道什么才是正确的。只是不想放弃未来而已-——-夏生"><a href="#11-我们不知道什么才是正确的。只是不想放弃未来而已-——-夏生" class="headerlink" title="11. 我们不知道什么才是正确的。只是不想放弃未来而已 —— 夏生"></a>11. <code>我们不知道什么才是正确的。只是不想放弃未来而已 —— 夏生</code></h3><h5 id="·-类型：哲理抒情-科幻小说人物心理"><a href="#·-类型：哲理抒情-科幻小说人物心理" class="headerlink" title="· 类型：哲理抒情 &#x2F; 科幻小说人物心理"></a>· 类型：哲理抒情 &#x2F; 科幻小说人物心理</h5><h5 id="·-场景：刻画人物理性与坚持，适合作为心理独白或反思段落。"><a href="#·-场景：刻画人物理性与坚持，适合作为心理独白或反思段落。" class="headerlink" title="· 场景：刻画人物理性与坚持，适合作为心理独白或反思段落。"></a>· 场景：刻画人物理性与坚持，适合作为心理独白或反思段落。</h5><h3 id="12-大家看向我指的方向。那里出现了一道飞翔的红色光芒。从云间飞向宇宙的一束光芒。为了摆脱地球重力，正在喷射出庞大的能量。那是指向未来的光之轨迹。这代表着人类即将离开陆地也要生存下去的傲慢，以及绝不向渐渐到来的灭亡妥协的决心。这无关善恶，只是纯粹对生存的执着，对未来的期盼。-——-夏生"><a href="#12-大家看向我指的方向。那里出现了一道飞翔的红色光芒。从云间飞向宇宙的一束光芒。为了摆脱地球重力，正在喷射出庞大的能量。那是指向未来的光之轨迹。这代表着人类即将离开陆地也要生存下去的傲慢，以及绝不向渐渐到来的灭亡妥协的决心。这无关善恶，只是纯粹对生存的执着，对未来的期盼。-——-夏生" class="headerlink" title="12. 大家看向我指的方向。那里出现了一道飞翔的红色光芒。从云间飞向宇宙的一束光芒。为了摆脱地球重力，正在喷射出庞大的能量。那是指向未来的光之轨迹。这代表着人类即将离开陆地也要生存下去的傲慢，以及绝不向渐渐到来的灭亡妥协的决心。这无关善恶，只是纯粹对生存的执着，对未来的期盼。 —— 夏生"></a>12. <code>大家看向我指的方向。那里出现了一道飞翔的红色光芒。从云间飞向宇宙的一束光芒。为了摆脱地球重力，正在喷射出庞大的能量。那是指向未来的光之轨迹。这代表着人类即将离开陆地也要生存下去的傲慢，以及绝不向渐渐到来的灭亡妥协的决心。这无关善恶，只是纯粹对生存的执着，对未来的期盼。 —— 夏生</code></h3><h5 id="·-类型：科幻小说-叙事文学-抒情散文"><a href="#·-类型：科幻小说-叙事文学-抒情散文" class="headerlink" title="· 类型：科幻小说 &#x2F; 叙事文学 &#x2F; 抒情散文"></a>· 类型：科幻小说 &#x2F; 叙事文学 &#x2F; 抒情散文</h5><h5 id="·-场景：科幻作品高潮描写，史诗场景刻画人类奋斗与希望，适合小说高潮或视觉化描写段落。"><a href="#·-场景：科幻作品高潮描写，史诗场景刻画人类奋斗与希望，适合小说高潮或视觉化描写段落。" class="headerlink" title="· 场景：科幻作品高潮描写，史诗场景刻画人类奋斗与希望，适合小说高潮或视觉化描写段落。"></a>· 场景：科幻作品高潮描写，史诗场景刻画人类奋斗与希望，适合小说高潮或视觉化描写段落。</h5><p>来自游玩时摘抄，如有纰漏敬请补充。</p><style>    .hide_text{        color: black;        background: black;        transition: color 0.3s ease, background-color 0.3s ease;    }    .hide_text:hover{        color:white;    }</style><h6 id="其实我觉得Happy-Ending并不Happy"><a href="#其实我觉得Happy-Ending并不Happy" class="headerlink" title="其实我觉得Happy Ending并不Happy("></a><span class="hide_text" title="你知道的太多了">其实我觉得Happy Ending并不Happy(</span></h6>]]></content>
    
    
    <summary type="html">ATRI ~My Dear Moment~ 中经典句子整理，可用于写作参考</summary>
    
    
    
    <category term="Galgame" scheme="https://ariakage.github.io/categories/Galgame/"/>
    
    <category term="句子摘录" scheme="https://ariakage.github.io/categories/Galgame/%E5%8F%A5%E5%AD%90%E6%91%98%E5%BD%95/"/>
    
    
    <category term="名句" scheme="https://ariakage.github.io/tags/%E5%90%8D%E5%8F%A5/"/>
    
    <category term="Galgame" scheme="https://ariakage.github.io/tags/Galgame/"/>
    
  </entry>
  
  <entry>
    <title>C++中的&quot;volatile&quot;关键字</title>
    <link href="https://ariakage.github.io/2025/10/12/TheKeywordVolatileInCPP/"/>
    <id>https://ariakage.github.io/2025/10/12/TheKeywordVolatileInCPP/</id>
    <published>2025-10-12T00:46:26.000Z</published>
    <updated>2025-10-26T04:50:43.649Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-”volatile”的语义"><a href="#1-”volatile”的语义" class="headerlink" title="1.”volatile”的语义"></a>1.”volatile”的语义</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">volatile</span> <span class="type">int</span> flag = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><ul><li>表示<code>flag</code>可能被硬件、中断、多线程或其他外部因素修改</li><li>编译器不能假设其值在两次访问之间保持不变</li><li>禁止优化：如删除“看似无用”的读取、合并多次读取、将变量放入寄存器等</li></ul><h2 id="2-从汇编角度看"><a href="#2-从汇编角度看" class="headerlink" title="2.从汇编角度看"></a>2.从汇编角度看</h2><h5 id="样例代码Code1-无volatile"><a href="#样例代码Code1-无volatile" class="headerlink" title="样例代码Code1: (无volatile)"></a>样例代码Code1: (无volatile)</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">    sum += flag;  <span class="comment">// 编译器可能优化为 sum += 1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可能生成的汇编代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">movl   $1000, %eax    ; sum = 1000 * 1</span><br></pre></td></tr></table></figure><p>完全跳过循环和内存访问，因为编译器认为<code>flag</code>不会变。</p><h5 id="样例代码Code2-有volatile"><a href="#样例代码Code2-有volatile" class="headerlink" title="样例代码Code2: (有volatile)"></a>样例代码Code2: (有volatile)</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">volatile</span> <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">    sum += flag;  <span class="comment">// 必须每次从内存读取 flag</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可能生成的汇编代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">movl   $0, %ebx          ; sum = 0</span><br><span class="line">movl   $0, %ecx          ; i = 0</span><br><span class="line">.L1:</span><br><span class="line">    cmpl   $1000, %ecx</span><br><span class="line">    jge    .L2</span><br><span class="line">    movl   flag(%rip), %eax   ; ← 每次都从内存读取 flag！</span><br><span class="line">    addl   %eax, %ebx         ; sum += flag</span><br><span class="line">    incl   %ecx</span><br><span class="line">    jmp    .L1</span><br><span class="line">.L2:</span><br></pre></td></tr></table></figure><ul><li>每次循环都执行<code>movl flag(%rip), %eax</code>从内存加载<code>flag</code></li><li>即使<code>flag</code>在循环中未被本程序修改，编译器也不敢假设其值不变</li></ul><article class="message is-info">                <div class="message-body">            <p>本文章中的汇编不确保可以运行，是”伪代码”</p>        </div>    </article><h2 id="3-样例代码实际输出的汇编码"><a href="#3-样例代码实际输出的汇编码" class="headerlink" title="3.样例代码实际输出的汇编码"></a>3.样例代码实际输出的汇编码</h2><article class="message is-primary">                <div class="message-body">            <p>Compile on Archlinux WSL</p>        </div>    </article><h5 id="样例代码CodeA-无volatile"><a href="#样例代码CodeA-无volatile" class="headerlink" title="样例代码CodeA: (无volatile)"></a>样例代码CodeA: (无volatile)</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">        sum += flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>汇编代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">.file&quot;codeA.cpp&quot;</span><br><span class="line">.text</span><br><span class="line">.globlmain</span><br><span class="line">.typemain, @function</span><br><span class="line">main:</span><br><span class="line">.LFB0:</span><br><span class="line">.cfi_startproc</span><br><span class="line">pushq%rbp</span><br><span class="line">.cfi_def_cfa_offset 16</span><br><span class="line">.cfi_offset 6, -16</span><br><span class="line">movq%rsp, %rbp</span><br><span class="line">.cfi_def_cfa_register 6</span><br><span class="line">movl$1, -4(%rbp)</span><br><span class="line">movl$0, -12(%rbp)</span><br><span class="line">movl$0, -8(%rbp)</span><br><span class="line">jmp.L2</span><br><span class="line">.L3:</span><br><span class="line">movl-4(%rbp), %eax</span><br><span class="line">addl%eax, -12(%rbp)</span><br><span class="line">addl$1, -8(%rbp)</span><br><span class="line">.L2:</span><br><span class="line">cmpl$999, -8(%rbp)</span><br><span class="line">jle.L3</span><br><span class="line">movl$0, %eax</span><br><span class="line">popq%rbp</span><br><span class="line">.cfi_def_cfa 7, 8</span><br><span class="line">ret</span><br><span class="line">.cfi_endproc</span><br><span class="line">.LFE0:</span><br><span class="line">.sizemain, .-main</span><br><span class="line">.ident&quot;GCC: (GNU) 15.2.1 20250813&quot;</span><br><span class="line">.section.note.GNU-stack,&quot;&quot;,@progbits</span><br></pre></td></tr></table></figure><h5 id="样例代码CodeB-有volatile"><a href="#样例代码CodeB-有volatile" class="headerlink" title="样例代码CodeB: (有volatile)"></a>样例代码CodeB: (有volatile)</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">volatile</span> <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">        sum += flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>汇编代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">.file&quot;codeB.cpp&quot;</span><br><span class="line">.text</span><br><span class="line">.globlmain</span><br><span class="line">.typemain, @function</span><br><span class="line">main:</span><br><span class="line">.LFB0:</span><br><span class="line">.cfi_startproc</span><br><span class="line">pushq%rbp</span><br><span class="line">.cfi_def_cfa_offset 16</span><br><span class="line">.cfi_offset 6, -16</span><br><span class="line">movq%rsp, %rbp</span><br><span class="line">.cfi_def_cfa_register 6</span><br><span class="line">movl$1, -12(%rbp)</span><br><span class="line">movl$0, -8(%rbp)</span><br><span class="line">movl$0, -4(%rbp)</span><br><span class="line">jmp.L2</span><br><span class="line">.L3:</span><br><span class="line">movl-12(%rbp), %eax</span><br><span class="line">addl%eax, -8(%rbp)</span><br><span class="line">addl$1, -4(%rbp)</span><br><span class="line">.L2:</span><br><span class="line">cmpl$999, -4(%rbp)</span><br><span class="line">jle.L3</span><br><span class="line">movl$0, %eax</span><br><span class="line">popq%rbp</span><br><span class="line">.cfi_def_cfa 7, 8</span><br><span class="line">ret</span><br><span class="line">.cfi_endproc</span><br><span class="line">.LFE0:</span><br><span class="line">.sizemain, .-main</span><br><span class="line">.ident&quot;GCC: (GNU) 15.2.1 20250813&quot;</span><br><span class="line">.section.note.GNU-stack,&quot;&quot;,@progbits</span><br></pre></td></tr></table></figure><article class="message is-info">        <div class="message-header"><p>为什么没有区别?</p></div>        <div class="message-body">            <p>因为没有使用编译器优化，<code>O0</code>模式</p>        </div>    </article><h4 id="使用O2后"><a href="#使用O2后" class="headerlink" title="使用O2后"></a>使用<code>O2</code>后</h4><h4 id="CodeA"><a href="#CodeA" class="headerlink" title="CodeA:"></a>CodeA:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.file&quot;codeA.cpp&quot;</span><br><span class="line">.text</span><br><span class="line">.section.text.startup,&quot;ax&quot;,@progbits</span><br><span class="line">.p2align 4</span><br><span class="line">.globlmain</span><br><span class="line">.typemain, @function</span><br><span class="line">main:</span><br><span class="line">.LFB0:</span><br><span class="line">.cfi_startproc</span><br><span class="line">xorl%eax, %eax</span><br><span class="line">ret</span><br><span class="line">.cfi_endproc</span><br><span class="line">.LFE0:</span><br><span class="line">.sizemain, .-main</span><br><span class="line">.ident&quot;GCC: (GNU) 15.2.1 20250813&quot;</span><br><span class="line">.section.note.GNU-stack,&quot;&quot;,@progbits</span><br></pre></td></tr></table></figure><h4 id="CodeB"><a href="#CodeB" class="headerlink" title="CodeB:"></a>CodeB:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">.file&quot;codeB.cpp&quot;</span><br><span class="line">.text</span><br><span class="line">.section.text.startup,&quot;ax&quot;,@progbits</span><br><span class="line">.p2align 4</span><br><span class="line">.globlmain</span><br><span class="line">.typemain, @function</span><br><span class="line">main:</span><br><span class="line">.LFB0:</span><br><span class="line">.cfi_startproc</span><br><span class="line">movl$1, -4(%rsp)</span><br><span class="line">movl$1000, %eax</span><br><span class="line">.p2align 4</span><br><span class="line">.p2align 4</span><br><span class="line">.p2align 3</span><br><span class="line">.L2:</span><br><span class="line">movl-4(%rsp), %edx</span><br><span class="line">movl-4(%rsp), %edx</span><br><span class="line">subl$2, %eax</span><br><span class="line">jne.L2</span><br><span class="line">xorl%eax, %eax</span><br><span class="line">ret</span><br><span class="line">.cfi_endproc</span><br><span class="line">.LFE0:</span><br><span class="line">.sizemain, .-main</span><br><span class="line">.ident&quot;GCC: (GNU) 15.2.1 20250813&quot;</span><br><span class="line">.section.note.GNU-stack,&quot;&quot;,@progbits</span><br></pre></td></tr></table></figure><h2 id="4-从汇编看"><a href="#4-从汇编看" class="headerlink" title="4.从汇编看"></a>4.从汇编看</h2><p>从开启O2的汇编里看，CodeA由于没有使用”volatile”关键字，for循环直接被优化了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">main:</span><br><span class="line">    xorl %eax, %eax</span><br><span class="line">    ret</span><br></pre></td></tr></table></figure><h6 id="为什么"><a href="#为什么" class="headerlink" title="为什么?"></a>为什么?</h6><ul><li><code>flag</code>是编译期常量（值为 1）</li><li><code>sum</code>未被使用（无<code>return sum</code>或输出）</li><li>编译器判定循环无副作用 -&gt; Dead Code Elimination<br>而CodeB中</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">main:</span><br><span class="line">    movl $1, -4(%rsp)     # flag = 1 存入栈</span><br><span class="line">    movl $1000, %eax      # 计数器初始化</span><br><span class="line">.L2:</span><br><span class="line">    movl -4(%rsp), %edx   # &lt;- 强制从内存读取 flag</span><br><span class="line">    movl -4(%rsp), %edx   # &lt;- 再次读取（可能因对齐或语义保留）</span><br><span class="line">    subl $2, %eax</span><br><span class="line">    jne .L2</span><br><span class="line">    xorl %eax, %eax</span><br><span class="line">    ret</span><br></pre></td></tr></table></figure><ul><li>循环被保留，尽管<code>flag</code>值不变</li><li>每次循环都执行<code>movl -4(%rsp), %edx</code></li><li>即使<code>%edx</code>未被使用，编译器也不敢删除</li><li>因为<code>volatile</code>表示“每次访问都有潜在副作用”</li><li>循环步长为 2（<code>subl $2, %eax</code>）可能是编译器尝试合并两次加法（<code>sum += flag + flag</code>），但因”volatile”仍需两次独立读取</li></ul><h2 id="5-写在最后"><a href="#5-写在最后" class="headerlink" title="5.写在最后"></a>5.写在最后</h2><ul><li>“volatile”不是运行时特性，而是对编译器优化器的约束。<br>在<code>-O0</code>（无优化）下，普通变量与”volatile”行为相似（都访问内存），差异不明显</li><li>在<code>-O2</code>等优化级别下，”volatile” 强制保留所有内存访问，确保程序行为符合预期</li></ul>]]></content>
    
    
    <summary type="html">本文讲解了 C++ 中 &quot;volatile&quot; 关键字的语义、对编译器优化的影响以及不同优化等级下的汇编对比，适合程序员学习参考。</summary>
    
    
    
    <category term="编程" scheme="https://ariakage.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="C++" scheme="https://ariakage.github.io/categories/%E7%BC%96%E7%A8%8B/C/"/>
    
    
    <category term="C++" scheme="https://ariakage.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://ariakage.github.io/2025/10/12/hello-world/"/>
    <id>https://ariakage.github.io/2025/10/12/hello-world/</id>
    <published>2025-10-11T21:37:46.210Z</published>
    <updated>2025-10-11T21:37:46.210Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
